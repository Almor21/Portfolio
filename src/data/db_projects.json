{
	"areas": ["Frontend", "Backend", "OOP"],
	"data": [
		{
			"name": "Portfolio",
			"notes": "Personal portfolio where I showcase some of my skills and experience through a unique design I developed myself, incorporating interesting concepts and animations. I primarily demonstrate some of my frontend web development skills, along with backend functionalities to dynamically manage information about the technologies and projects I have developed.",
			"link": "https://github.com/Almor21/Portfolio",
			"technologies": [
				"Tailwind",
				"TypeScript",
				"React",
				"NextJS",
				"Framer Motion",
				"Zustand"
			],
			"tags": ["Frontend", "Backend"]
		},
		{
			"name": "NearbyEatsAPI",
			"notes": "A REST API built with NestJS and deployed using Docker, designed to manage users and allow them to search for nearby restaurants through integration with the Google Places API. It implements secure authentication with JWT, user action logging, and connects to a PostgreSQL database using TypeORM. The project is fully containerized with Docker Compose, including both the API and the database, and features a history system to track user interactions.",
			"link": "https://github.com/Almor21/nearby-eats-api",
			"technologies": [
				"TypeScript",
				"NestJS",
				"JWT",
				"PostgreSQL",
				"TypeORM",
				"Docker"
			],
			"tags": ["Backend"]
		},
		{
			"name": "BrandRegistration",
			"notes": "A full-stack web application for brand registration, built with a FastAPI backend, a Next.js frontend, and a PostgreSQL database. The project is fully containerized with Docker Compose, allowing the entire application (backend, frontend, and database) to be run with a single command. It supports both development and production modes, includes database migrations, and leverages Turborepo for efficient monorepo management during development.",
			"link": "https://github.com/Almor21/brand-registration",
			"technologies": [
				"TypeScript",
				"Python",
				"React",
				"NextJS",
				"MaterialUI",
				"FastAPI",
				"PostgreSQL",
				"Docker"
			],
			"tags": ["Frontend", "Backend"]
		},
		{
			"name": "Biblioteca-API",
			"notes": "Server developed with Express.js and MongoDB for managing users, books, and reservations in a library. It includes JWT authentication, a permissions system, and functional API routes for CRUD operations. This project was developed to apply and showcase part of my backend knowledge, with a practical, structured, and secure approach.",
			"link": "https://github.com/Almor21/Biblioteca-API",
			"technologies": [
				"NodeJS",
				"TypeScript",
				"ExpressJS",
				"MongoDB",
				"MongooseJS"
			],
			"tags": ["Backend"]
		},
		{
			"name": "Logisim Web",
			"notes": "Web page for developing logic circuits, inspired by Logisim desktop application and built entirely with vanilla JavaScript. I was responsible for the design and implementation of the OOP-based logic and structure of the classes and objects, with the goal to create a solid and scalable foundation for future student contributions and project expansion.",
			"link": "https://github.com/Almor21/LogisimWeb",
			"technologies": ["JavaScript", "HTML", "CSS"],
			"tags": ["Frontend", "Backend", "OOP"]
		}
	]
}
